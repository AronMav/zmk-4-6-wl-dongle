#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        bootloaderLeft {
            bindings = <&bootloader>;
            key-positions = <0 13>;
        };

        bootloaderRight {
            bindings = <&bootloader>;
            key-positions = <11 22>;
        };

        resetLeft {
            bindings = <&sys_reset>;
            key-positions = <0 12>;
        };

        resetRight {
            bindings = <&sys_reset>;
            key-positions = <11 23>;
        };
    };

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 6>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
        bindings = <&ib_toggle_layer 3>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        ControlAltY: ControlAltY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LALT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LALT>;

            label = "ControlAltY";
        };

        DogSymbolRu: DogSymbolRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(NUMBER_2)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "DogSymbolRu";
        };

        DollarRu: DollarRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(NUMBER_4)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "DollarRu";
        };

        SharpRu: SharpRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(NUMBER_3)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "SharpRu";
        };

        VerticalLineRu: VerticalLineRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(BACKSLASH)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "VerticalLineRu";
        };

        AmpersandRu: AmpersandRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(NUMBER_7)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "AmpersandRu";
        };

        NumberEn: NumberEn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
				<&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(NUMBER_3)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "NumberEn";
        };

        SignIsSmallerRu: SignIsSmallerRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(COMMA)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "SignIsSmallerRu";
        };

        CarriagesRu: CarriagesRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(NUMBER_6)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "CarriagesRu";
        };

        SignIsBigRu: SignIsBigRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(PERIOD)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "SignIsBigRu";
        };

        LeftSquareBracketRu: LeftSquareBracketRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LEFT_BRACKET>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "LeftSquareBracketRu";
        };

        RightSquareBracketRu: RightSquareBracketRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp RIGHT_BRACKET>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "RightSquareBracketRu";
        };

        ApostropheRu: ApostropheRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp SQT>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "ApostropheRu";
        };

        LeftCurlyBraceRu: LeftCurlyBraceRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(LEFT_BRACKET)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "LeftCurlyBraceRu";
        };

        RightCurlyBraceRu: RightCurlyBraceRu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>,
                <&macro_tap>,
                <&kp LS(RIGHT_BRACKET)>,
                <&macro_tap>,
                <&kp LA(LEFT_SHIFT)>;

            label = "RightCurlyBraceRu";
        };

        SwitchEnLanguage: SwitchEnLanguage {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <20>;
            tap-ms = <20>;
            bindings = 
				<&macro_tap>, 
				<&kp LA(LEFT_SHIFT)>, 
				<&macro_tap>,
				<&to 4>;

            label = "SwitchEnLanguage";
        };

        SwitchRuLanguage: SwitchRuLanguage {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
			wait-ms = <20>;
            tap-ms = <20>;
            bindings = 
				<&macro_tap>, 
				<&kp LA(LEFT_SHIFT)>, 
				<&macro_tap>,
				<&to 0>;

            label = "SwitchRuLanguage";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            display-name = "Base";
            bindings = <
&kp F1        &kp F2  &kp F3  &kp F4            &kp F5           &kp F6                &kp F7               &kp F8  &kp F9     &kp F10  &kp F11           &kp F12
&kp TAB       &kp Q   &kp W   &kp E             &kp R            &kp T                 &kp Y                &kp U   &kp I      &kp O    &kp P             &kp GRAVE
&kp LEFT_ALT  &kp A   &kp S   &kp D             &kp F            &kp G                 &kp H                &kp J   &kp K      &kp L    &kp SEMI          &kp ENTER
&kp ESC       &kp Z   &kp X   &kp C             &kp V            &mt LEFT_BRACKET B    &mt RIGHT_BRACKET N  &kp M   &kp COMMA  &kp DOT  &kp SINGLE_QUOTE  &kp RIGHT_CONTROL
                              &kp LEFT_CONTROL  &mo 1            &kp LEFT_GUI          &kp RIGHT_SHIFT      &mo 2
                                                &kp RIGHT_SHIFT  &kp SPACE             &kp BSPC
            >;
        };

        Lower {
            label = "Lower";
            display-name = "Lower";
            bindings = <
&kp F1  &kp F2               &kp F3          &kp F4          &kp F5           &kp F6          &kp F7           &kp F8  &kp F9  &kp F10  &kp F11        &kp F12
&trans  &kp LC(PAUSE_BREAK)  &kp HOME        &kp UP_ARROW    &kp END          &kp CAPSLOCK    &kp PAGE_UP      &kp N7  &kp N8  &kp N9   &kp LC(SLASH)  &trans
&trans  &trans               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans          &kp PAGE_DOWN    &kp N4  &kp N5  &kp N6   &ControlAltY   &trans
&trans  &trans               &kp LC(LEFT)    &trans          &kp LC(RIGHT)    &kp DELETE      &kp PRINTSCREEN  &kp N1  &kp N2  &kp N3   &kp N0         &trans
                                             &trans          &trans           &trans          &trans           &trans
                                                             &trans           &trans          &trans
            >;
        };

        Raise {
            label = "Raise";
            display-name = "Raise";
            bindings = <
&trans           &trans            &trans         &DogSymbolRu    &trans                    &trans              &trans             &trans              &kp LS(NUMBER_5)      &trans                 &trans               &trans
&trans           &kp UNDERSCORE    &kp PLUS       &kp MINUS       &kp ASTERISK              &kp LS(NUMBER_6)    &trans             &SignIsSmallerRu    &CarriagesRu          &SignIsBigRu           &kp LS(NUMBER_2)     &ApostropheRu
&kp EXCLAMATION  &AmpersandRu      &DollarRu      &kp EQUAL       &SharpRu                  &kp LS(NUMBER_4)    &trans             &LeftSquareBracketRu  &kp LS(SLASH)         &kp SLASH            &RightSquareBracketRu  &kp LS(NUMBER_7)
&trans           &kp LS(NUMBER_3)  &kp BACKSLASH  &VerticalLineRu &kp LS(NON_US_BACKSLASH)  &trans              &SwitchEnLanguage  &LeftCurlyBraceRu     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &RightCurlyBraceRu     &trans
                                                  &trans          &trans                    &trans              &trans             &trans
                                                                  &trans                    &trans              &trans
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&mkp MCLK  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
                                      &trans  &trans       &trans
            >;
        };

        BaseEn {
            label = "BaseEn";
            display-name = "Base";
            bindings = <
&kp F1        &kp F2  &kp F3  &kp F4            &kp F5           &kp F6                &kp F7               &kp F8  &kp F9     &kp F10  &kp F11           &kp F12
&kp TAB       &kp Q   &kp W   &kp E             &kp R            &kp T                 &kp Y                &kp U   &kp I      &kp O    &kp P             &kp GRAVE
&kp LEFT_ALT  &kp A   &kp S   &kp D             &kp F            &kp G                 &kp H                &kp J   &kp K      &kp L    &kp SEMI          &kp ENTER
&kp ESC       &kp Z   &kp X   &kp C             &kp V            &mt LEFT_BRACKET B    &mt RIGHT_BRACKET N  &kp M   &kp COMMA  &kp DOT  &kp SINGLE_QUOTE  &kp RIGHT_CONTROL
                              &kp LEFT_CONTROL  &mo 5            &kp LEFT_GUI          &kp RIGHT_SHIFT      &mo 6
                                                &kp RIGHT_SHIFT  &kp SPACE             &kp BSPC
            >;
        };

        LowerEn {
            label = "LowerEn";
            display-name = "Lower";
            bindings = <
&kp F1  &kp F2               &kp F3          &kp F4          &kp F5           &kp F6          &kp F7           &kp F8  &kp F9  &kp F10  &kp F11        &kp F12
&trans  &kp LC(PAUSE_BREAK)  &kp HOME        &kp UP_ARROW    &kp END          &kp CAPSLOCK    &kp PAGE_UP      &kp N7  &kp N8  &kp N9   &kp LC(SLASH)  &trans
&trans  &trans               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans          &kp PAGE_DOWN    &kp N4  &kp N5  &kp N6   &ControlAltY   &trans
&trans  &trans               &kp LC(LEFT)    &trans          &kp LC(RIGHT)    &kp DELETE      &kp PRINTSCREEN  &kp N1  &kp N2  &kp N3   &kp N0         &trans
                                             &trans          &trans           &trans          &trans           &trans
                                                             &trans           &trans          &trans
            >;
        };

        RaiseEn {
            label = "RaiseEn";
            display-name = "Raise";
            bindings = <
&trans           &trans            &trans            &kp LS(NUMBER_2)   &trans            &trans               &trans             &trans                &kp LS(NUMBER_5)      &trans                 &trans                 &trans
&trans           &kp UNDERSCORE    &kp PLUS          &kp MINUS          &kp ASTERISK      &kp LS(SEMICOLON)    &trans             &kp LS(COMMA)         &kp LS(N6)            &kp LS(PERIOD)         &kp LS(SQT)            &kp SQT
&kp EXCLAMATION  &kp LS(NUMBER_7)  &kp LS(NUMBER_4)  &kp EQUAL          &kp LS(NUMBER_3)  &kp SEMICOLON        &trans             &kp LEFT_BRACKET      &kp COMMA             &kp DOT                &kp RIGHT_BRACKET      &kp LS(SLASH)
&trans           &NumberEn         &kp BACKSLASH     &kp LS(BACKSLASH)  &kp SLASH         &trans               &SwitchRuLanguage  &kp LS(LEFT_BRACKET)  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LS(RIGHT_BRACKET)  &trans
                                                     &trans             &trans            &trans               &trans             &trans
                                                                        &trans            &trans               &trans
            >;
        };
    };
};