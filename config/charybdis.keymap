#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        bootloaderLeft {
            bindings = <&bootloader>;
            key-positions = <0 13>;
        };

        bootloaderRight {
            bindings = <&bootloader>;
            key-positions = <11 22>;
        };

        resetLeft {
            bindings = <&sys_reset>;
            key-positions = <0 12>;
        };

        resetRight {
            bindings = <&sys_reset>;
            key-positions = <11 23>;
        };
    };

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        ControlAltY: ControlAltY {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LALT>,
                <&macro_tap>,
                <&kp E>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LALT>;

            label = "ControlAltY";
        };

        ControlBackslash: ControlBackslash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp BACKSLASH>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;

            label = "ControlBackslash";
        };

        Comma: Comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "Comma";
        };

        Dot: Dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "Dot";
        };

        DogSymbol: DogSymbol {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "DogSymbol";
        };

        Percent: Percent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;

            label = "Percent";
        };

        Colon: Colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;

            label = "Colon";
        };

        Semicolon: Semicolon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "Semicolon";
        };

        Dollar: Dollar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;

            label = "Dollar";
        };

        Sharp: Sharp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;

            label = "Sharp";
        };

        VerticalLine: VerticalLine {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "VerticalLine";
        };

        Ampersand: Ampersand {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;

            label = "Ampersand";
        };

        Number: Number {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N2 &kp KP_N5 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "Number";
        };

        ForwardSlash: ForwardSlash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;

            label = "ForwardSlash";
        };

        SignIsSmaller: SignIsSmaller {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N0>,
                <&macro_release>,
                <&kp LALT>;

            label = "SignIsSmaller";
        };

        Carriages: Carriages {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "Carriages";
        };

        SignIsBig: SignIsBig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;

            label = "SignIsBig";
        };

        LeftSquareBracket: LeftSquareBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;

            label = "LeftSquareBracket";
        };

        RightSquareBracket: RightSquareBracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "RightSquareBracket";
        };

        DoubleQuotationMark: DoubleQuotationMark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;

            label = "DoubleQuotationMark";
        };

        Apostrophe: Apostrophe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;

            label = "Apostrophe";
        };

        QuestionMark: QuestionMark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "QuestionMark";
        };

        LeftCurlyBrace: LeftCurlyBrace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;

            label = "LeftCurlyBrace";
        };

        RightCurlyBrace: RightCurlyBrace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;

            label = "RightCurlyBrace";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            display-name = "Base";
            bindings = <
&kp F1        &kp F2  &kp F3  &kp F4            &kp F5           &kp F6                &kp F7               &kp F8  &kp F9     &kp F10  &kp F11           &kp F12
&kp TAB       &kp Q   &kp W   &kp E             &kp R            &kp T                 &kp Y                &kp U   &kp I      &kp O    &kp P             &kp GRAVE
&kp LEFT_ALT  &kp A   &kp S   &kp D             &kp F            &kp G                 &kp H                &kp J   &kp K      &kp L    &kp SEMI          &kp ENTER
&kp ESC       &kp Z   &kp X   &kp C             &kp V            &mt LEFT_BRACKET B    &mt RIGHT_BRACKET N  &kp M   &kp COMMA  &kp DOT  &kp SINGLE_QUOTE  &kp RIGHT_CONTROL
                              &kp LEFT_GUI      &mo 1  			 &kp LEFT_CONTROL      &kp RIGHT_SHIFT      &mo 2
                                                &kp RIGHT_SHIFT  &kp SPACE             &kp BSPC
            >;
        };

        Lower {
            label = "Lower";
            display-name = "Lower";
            bindings = <
&kp F1  &kp F2               &kp F3          &kp F4          &kp F5           &kp F6        &kp F7           &kp F8  &kp F9  &kp F10  &kp F11            &kp F12
&trans  &kp LC(PAUSE_BREAK)  &kp HOME        &kp UP_ARROW    &kp END          &kp CAPSLOCK  &kp PAGE_UP      &kp N7  &kp N8  &kp N9   &ControlBackslash  &trans
&trans  &trans               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans        &kp PAGE_DOWN    &kp N4  &kp N5  &kp N6   &ControlAltY       &trans
&trans  &trans               &kp LC(LEFT)    &trans          &kp LC(RIGHT)    &kp DELETE    &kp PRINTSCREEN  &kp N1  &kp N2  &kp N3   &kp N0             &trans
                                             &trans          &trans           &trans        &trans           &mo 3
                                                             &trans           &trans        &trans
            >;
        };

        Raise {
            label = "Raise";
            display-name = "Raise";
            bindings = <
&trans           &trans          &trans         &DogSymbol     &trans         &trans        &trans               &trans              &Percent              &trans                 &trans                &trans
&trans           &kp UNDERSCORE  &kp PLUS       &kp MINUS      &kp ASTERISK   &Colon        &trans               &SignIsSmaller      &Carriages            &SignIsBig             &DoubleQuotationMark  &Apostrophe
&kp EXCLAMATION  &Ampersand      &Dollar        &kp EQUAL      &Sharp         &Semicolon    &trans				 &LeftSquareBracket  &Comma                &Dot                   &RightSquareBracket   &QuestionMark
&trans           &Number         &kp BACKSLASH  &VerticalLine  &ForwardSlash  &trans        &kp LA(RIGHT_SHIFT)  &LeftCurlyBrace     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &RightCurlyBrace      &trans
                                                &trans         &mo 3          &trans        &trans               &trans
                                                               &trans         &trans        &trans
            >;
        };

        Game {
            label = "Game";
            display-name = "Game";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            display-name = "Gameq";
            bindings = <
&trans   &trans        &trans        &trans        &trans        &trans          &trans         &trans         &trans         &trans         &trans         &trans
&kt F5   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &trans        &trans        &trans          &trans         &trans
                                                   &trans        &trans          &trans
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans     &trans  &trans  &trans     &trans  &trans       		   &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans           	   &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans      	  	   &trans  &trans  &trans  &trans  &trans  &trans
&mkp MCLK  &trans  &trans  &trans     &trans  &trans       		   &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    		   &trans  &trans
                                      &trans  &trans       		   &trans
            >;
        };
    };
};
