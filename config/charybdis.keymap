#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 16>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 19>;
        };

        bootloaderLeft {
            bindings = <&bootloader>;
            key-positions = <0 13>;
        };

        bootloaderRight {
            bindings = <&bootloader>;
            key-positions = <11 22>;
        };

        resetLeft {
            bindings = <&sys_reset>;
            key-positions = <0 12>;
        };

        resetRight {
            bindings = <&sys_reset>;
            key-positions = <11 23>;
        };
    };

    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 3 4 5>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;
        bindings = <&ib_toggle_layer 5>;
    };

    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <4>;
    };

    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <1>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        y-invert;
        bindings = <&ib_wheel_scaler 1 16>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    behaviors {
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            bindings = <&mo>, <&kp>;
        };
    };

    macros {
        DogSymbol: DogSymbol {
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
			tap-ms = <40>;
            bindings = <&macro_press   &kp LALT>
					, <&macro_tap     &kp KP_N6 &kp KP_N4>
					, <&macro_release &kp LALT>
					;
            label = "DOGSYMBOL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            display-name = "Base";
            bindings = <
&kp F1        &kp F2  &kp F3  &kp F4            &kp F5          &kp F6          &kp F7           &kp F8  &kp F9     &kp F10  &kp F11           &kp F12
&kp TAB       &kp Q   &kp W   &kp E             &kp R           &kp T           &kp Y            &kp U   &kp I      &kp O    &kp P             &kp GRAVE
&kp LEFT_ALT  &kp A   &kp S   &kp D             &kp F           &kp G           &kp H            &kp J   &kp K      &kp L    &kp SEMI          &kp ENTER
&kp ESC       &kp Z   &kp X   &kp C             &kp V           &kp B           &kp N            &kp M   &kp COMMA  &kp DOT  &kp SINGLE_QUOTE  &kp RIGHT_CONTROL
                              &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_GUI    &kp RIGHT_SHIFT  &mo 2
                                                &mo 1           &kp SPACE       &kp BSPC
            >;
        };

        Lower {
            label = "Lower";
            display-name = "Lower";
            bindings = <
&kp F1  &kp F2               &kp F3          &kp F4          &kp F5           &kp F6                 &kp F7           &kp F8  &kp F9  &kp F10  &kp F11        &kp F12
&trans  &kp LC(PAUSE_BREAK)  &kp HOME        &kp UP_ARROW    &kp END          &trans                 &kp PAGE_UP      &kp N7  &kp N8  &kp N9   &kp LC(SLASH)  &trans
&trans  &trans               &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(RIGHT_SHIFT)    &kp PAGE_DOWN    &kp N4  &kp N5  &kp N6   &kp LC(LA(E))  &trans
&trans  &trans               &kp LC(LEFT)    &kp CAPSLOCK    &kp LC(RIGHT)    &kp DELETE             &kp PRINTSCREEN  &kp N1  &kp N2  &kp N3   &trans         &trans
                                             &trans          &trans           &trans                 &trans           &mo 3
                                                             &trans           &trans                 &trans
            >;
        };

        Raise {
            label = "Raise";
            display-name = "Raise";
            bindings = <
&trans  &trans        &trans       &DogSymbol  &trans    &trans       &bootloader  &sys_reset  &trans           &trans    &trans    &trans
&trans  &trans        &trans       &kp HASH    &kp DLLR  &kp PRCNT    &kp CARET    &kp AMPS    &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DEL
&trans  &bt BT_CLR    &bt BT_PRV   &bt BT_NXT  &trans    &to 3        &kp UNDER    &kp EQUAL   &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_TOG  &bootloader  &trans      &trans    &trans       &kp MINUS    &kp PLUS    &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                   &trans      &trans    &trans       &trans       &trans
                                               &mo 3     &trans       &trans
            >;
        };

        Game {
            label = "Game";
            display-name = "Game";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &sl 4     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 0
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            display-name = "Gameq";
            bindings = <
&trans   &trans        &trans        &trans        &trans        &trans          &trans         &trans         &trans         &trans         &trans         &trans
&kt F5   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &trans         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &trans        &trans        &trans          &trans         &trans
                                                   &trans        &trans          &trans
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans     &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&mkp MCLK  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &mkp LCLK
                           &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
                                      &trans  &trans       &trans
            >;
        };
    };
};
