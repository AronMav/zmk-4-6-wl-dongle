#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>

/ {
  split_inputs {
    #address-cells = <1>;
    #size-cells = <0>;

    trackball_split: trackball_split@0 {
      compatible = "zmk,input-split";
      reg = <0>;
    };
  };

  trackball_listener: trackball_listener {
    compatible = "zmk,input-listener";
    status = "disabled";
    device = <&trackball_split>;

    snipe {
      layers = <3>;
      input-processors = <&zip_xy_scaler 1 3>;
    };

    scroll {
      layers = <1 4>;
      input-processors = <&zip_xy_transform (INPUT_TRANSFORM_Y_INVERT)>, <&zip_xy_scaler 1 3>, <&zip_xy_to_scroll_mapper>;
    };

    move {
      layers = <0 2 3 5 6>;
      input-processors = <&auto_mouse_layer 6 1000>;
    };
  };

  auto_mouse_layer: auto_mouse_layer {
    compatible = "zmk,input-processor-temp-layer";
    #input-processor-cells = <2>;
    require-prior-idle-ms = <500>;
  };

  zip_xy_scaler: zip_xy_scaler {
    compatible = "zmk,input-processor-scaler";
    #input-processor-cells = <2>;
    type = <INPUT_EV_REL>;
    codes = <INPUT_REL_X INPUT_REL_Y>;
  };

  zip_xy_to_scroll_mapper: zip_xy_to_scroll_mapper {
    compatible = "zmk,input-processor-code-mapper";
    #input-processor-cells = <0>;
    type = <INPUT_EV_REL>;
    map = <INPUT_REL_X INPUT_REL_HWHEEL
           INPUT_REL_Y INPUT_REL_WHEEL>;
  };

  zip_xy_transform: zip_xy_transform {
    compatible = "zmk,input-processor-transform";
    #input-processor-cells = <1>;
    type = <INPUT_EV_REL>;
    codes = <INPUT_REL_X INPUT_REL_Y>;
  };
};
